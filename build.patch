diff -ura electron-ssr-0.2.6/.electron-vue/build.js electron-ssr-0.2.6-new/.electron-vue/build.js
--- electron-ssr-0.2.6/.electron-vue/build.js	2019-01-19 23:15:33.631275262 +0800
+++ electron-ssr-0.2.6-new/.electron-vue/build.js	2019-01-19 23:15:37.908378989 +0800
@@ -46,10 +46,6 @@
     process.stdout.write('\x1B[2J\x1B[0f')
     console.log(`\n\n${results}`)
     console.log(`${okayLog}take it away ${chalk.yellow('`electron-builder`')}\n`)
-    // 打包发布版本
-    release().then(function () {
-      process.exit()
-    })
   })
 
   pack(mainConfig).then(result => {

diff -ura electron-ssr-0.2.6/src/main/index.js electron-ssr-0.2.6-new/src/main/index.js
--- electron-ssr-0.2.6/src/main/index.js	2018-12-26 18:29:32.000000000 +0800
+++ electron-ssr-0.2.6-new/src/main/index.js	2019-01-20 15:08:44.166253824 +0800
@@ -28,7 +28,12 @@
   }
   // 如果是通过链接打开的应用，则添加记录
   if (argv[1]) {
-    const configs = loadConfigsFromString(argv[1])
+    let configs = null
+    if (argv[0] !== 'electron-ssr') {
+      configs = loadConfigsFromString(argv[2])
+    } else {
+      configs = loadConfigsFromString(argv[1])
+    }
     if (configs.length) {
       addConfigs(configs)
     }

diff -ura electron-ssr-0.2.6/src/main/bootstrap.js electron-ssr-0.2.6-new/src/main/bootstrap.js
--- electron-ssr-0.2.6/src/main/bootstrap.js	2018-12-26 18:29:32.000000000 +0800
+++ electron-ssr-0.2.6-new/src/main/bootstrap.js	2019-01-21 22:10:10.157584848 +0800
@@ -36,6 +36,8 @@
   logger.error(`Unhandled Rejection at: Promise ${p}, reason: ${reason}`)
 })
 
+app.setPath('userData', path.join(app.getPath('appData'), 'electron-ssr'))
+app.setVersion('0.2.6')
 // 应用配置存储目录
 export const appConfigDir = app.getPath('userData')
 // 应用配置存储路径

diff -ura electron-ssr-0.2.6/src/main/logger.js electron-ssr-0.2.6-new/src/main/logger.js
--- electron-ssr-0.2.6/src/main/logger.js   2018-12-26 18:29:32.000000000 +0800
+++ electron-ssr-0.2.6-new/src/main/logger.js 2019-01-21 22:29:14.657347146 +0800
@@ -3,11 +3,13 @@
 import { join } from 'path'
 import { ensureDirSync } from 'fs-extra'
 import * as Sentry from '@sentry/electron'
+import path from 'path'
 
 if (process.env.NODE_ENV === 'production') {
   Sentry.init({ dsn: 'https://39bffe7372d14000bd5d30e50a27c388@sentry.io/1359858' })
 }
 
+app.setPath('userData', path.join(app.getPath('appData'), 'electron-ssr'))
 const userPath = app.getPath('userData')
 const logFolder = join(userPath, 'logs')
 ensureDirSync(logFolder)

diff -ura electron-ssr-0.2.6/src/main/index.js electron-ssr-0.2.6-new/src/main/index.js
--- electron-ssr-0.2.6/src/main/index.js        2019-04-12 15:05:00.420443178 +0800
+++ electron-ssr-0.2.6-new/src/main/index.js    2019-04-12 15:06:38.004324260 +0800
@@ -17,7 +17,8 @@
 import { loadConfigsFromString } from '../shared/ssr'
 import { isMac, isWin } from '../shared/env'
 
-const isSecondInstance = app.makeSingleInstance((argv, workingDirectory) => {
+app.requestSingleInstanceLock()
+app.on('second-instance', (event, argv, workingDirectory) => {
   // Someone tried to run a second instance, we should focus our window.
   const _window = getWindow()
   if (_window) {
@@ -38,13 +39,8 @@
       addConfigs(configs)
     }
   }
-})
-
-if (isSecondInstance) {
-  // cannot find module '../dialog'
-  // https://github.com/electron/electron/issues/8862#issuecomment-294303518
   app.exit()
-}
+})
 
 bootstrap.then(() => {
   createWindow()
